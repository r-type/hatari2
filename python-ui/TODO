TODO
====

This lists potential TODO items that aren't listed in the Hatari/UI
sources.

* Supporting setting CPU level & clock and Falcon DSP type

* Supporting ASCI / IDE hard disk image and whether to use these
  or GEMDOS HD dir

* Features for Help menu:
  - Create empty floppy images (+ convert directories to hard disks?)
  - MSA converter

* Work on the debug UI:
  - DSP support
  - breakpoint support
  - multiple views to memory
  - trace & debug log viewers

* Put all configuration stuff into single notebook dialog?

* Translation support for the UI:
  - use gettext
  - build needs to build & install message catalogs
  - some way for Hatari to forward dialog ID to the remote UI
    with dialog string parameters (filenames etc) which then
    need to be localized too & shown...

* Hatari UI specific configuration which stores:
  - disk image dir (uses Hatari config value as default)
  - trace settings
    - remove dialog specific load/save stuff
  - list of memory snapshots (10?)
  - screenshot name
    - needs support also to Hatari src/screenSnapShot.c

* Supporting other, less important Hatari configuration options:
  - toggling disk-b autoinsertion, write protection and slow FDC
  - separate A/B disk paths for images that are within ZIP archives
  - joystick autofire toggling, defining the keys for joyemu
  - keyboard repeat, key mapping type and file
  - multiple GEMDOS partition directories
  - toggling ST blitter, RTC support
  - vdi planes and size, SDL bpp forcing, spec512 threshold, frames-per-sec
  - border sizes in windowed and fullscreen mode, mouse grabbing
  - screen recording type (every frame vs. when changed)
  - cartridge image (where? it has many limitations)
  - log file and levels, bios intercept, run-VBLs
(Several of these aren't supported by the internal Hatari UI either
or do have command line options so they will require support on
the Hatari control.c side too.)
